#!/bin/bash
#
# Bootstrap DCOS
#
if [ ! -f "$PREP_CONF" ]; then
    @go.log FATAL "Cannot find $PREP_CONF - Exiting"
fi
. $PREP_CONF

if [ ! -f "$DCOS_CONF" ]; then
    @go.log FATAL "Cannot bootstrap DCOS without $DCOS_CONF. Please run ./zeta dcos to create"
fi
. $DCOS_CONF

ssh -o StrictHostKeyChecking=no $BOOTSTRAP_NODE "mkdir -p $BOOTSTRAP_LOC/genconf"

scp ./conf/ip-detect $BOOTSTRAP_NODE:$BOOTSTRAP_LOC/genconf/


MASTERS=""
for MASTER in $MASTER_NODES; do
    if [ "$MASTERS" = "" ]; then
        MASTERS=""
    else
        MASTERS="${MASTERS}"$'\n'
    fi
    MASTERS="${MASTERS}- $S"
done

RESOLVERS=""
for RESOLVER in $DNS_RESOLVERS; do
    if [ "$RESOLVERSS" = "" ]; then
        RESOLVERS=""
    else
        RESOLVERS="${RESOLVERS}"$'\n'
    fi
    RESOLVERS="${RESOLVERS}- $S"
done



cat > /tmp/config.yaml << EOF
---
bootstrap_url: http://$BOOTSTRAP_NODE:$BOOTSTRAP_PORT
cluster_name: $CLUSTERNAME
exhibitor_storage_backend: static
log_directory: /genconf/logs
master_discovery: static
telemetry_enabled: 'false'
master_list:
$MASTERS
process_timeout: 120
resolvers:
$RESOLVERS
dns_search: $DNS_SEARCH
process_timeout: 300
oauth_enabled: 'false'
ssh_key_path: /home/zetaadm/.ssh/id_rsa
ssh_port: '22'
ssh_user: zetaadm
EOF

scp /tmp/config.yaml $BOOTSTRAP_NODE:$BOOTSTRAP_LOC/genconf/
rm /tmp/config.yaml

ssh $BOOTSTRAP_NODE "cd $BOOTSTRAP_LOC/genconf && sudo docker pull nginx && curl -O https://downloads.dcos.io/dcos/stable/dcos_generate_config.sh && sudo bash dcos_generate_config.sh && sudo docker run -d -p ${BOOTSTRAP_PORT}:80 -v ${BOOTSTRAP_LOC}/genconf/serve:/usr/share/nginx/html:ro nginx"

@go.log INFO "Bootstrap is running and available at http://$BOOTSTRAP_NODE:$BOOTSTRAP_PORT"
