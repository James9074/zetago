#!/bin/bash
#
# cluster zetabase
#
# Base Directory installation for Zeta Architecture
#
#
sourceconf "$PREP_CONF"
sourceconf "$DCOS_CONF"
sourceconf "$MAPR_CONF"
sourceconf "$CLUSTER_CONF"
sourceconf "$CLUSTER_ZETACA_CONF"

. "$_GO_USE_MODULES" 'libmapr'

function _zetabase() {

    CURUSER=$(whoami)
    if [ "$CURUSER" != "zetaadm" ]; then
        @go.log FATAL "Must use zetaadm user"
    fi

    if [ -f "$CLUSTER_BASE_CONF" ]; then
        @go.log FATAL "Cluster base conf found at $CLUSTER_BASE_CONF - Not installing"
    fi


    @go.log INFO "Checking default hbase and apps volumes in MapR and removing if exists"
    if [ -d "/mapr/$CLUSTERNAME/hbase" ]; then
        @go.maprapi "/volume/remove?name=mapr.hbase"
        sudo rm -rf /mapr/$CLUSTERNAME/hbase
    fi
    if [ -d "/mapr/$CLUSTERNAME/apps" ]; then
        @go.maprapi "/volume/remove?name=mapr.apps"
        sudo rm -rf /mapr/$CLUSTERNAME/apps
    fi

    @go.log INFO "Checking for and creating if not existing, home directories for mapr and zetaadm users"
    UNAMES="mapr zetaadm"
    for U in $NAMES; do
        if [ ! -d "/mapr/$CLUSTERNAME/user/$U" ]; then
            @go.log INFO "User Directory for $U not found: Creating"
            @go.maprapi "/volume/create?name=user.$U&path=/user/$U&rootdirperms=770&user=$U:fc,a,dump,restore,m,d%20zetaadm:fc,a,dump,restore,m,d%20mapr:fc,a,dump,restore,m,d&ae=$U"
            T=""
            while [ "$T" == "" ]; do
                sleep 1
                T=$(ls -1 /mapr/$CLUSTERNAME/user|grep $U)
            done
            sudo chown -R $U:zetaadm /mapr/$CLUSTERNAME/user/$U
        else
            @go.log INFO "User directory for $U found"
        fi
    done


    @go.log INFO "Creating root directories for your zeta cluster"
    ROOTS=$(echo $ROOT_DIRS|tr "," " ")
    for DIR in $ROOTS; do
        echo "Checking /mapr/$CLUSTERNAME/$DIR"
        if [ -d "/mapr/$CLUSTERNAME/$DIR" ]; then
            @go.log WARN "Directory /mapr/$CLUSTERNAME/$DIR already exists: Updating Permissions"
        else
            @go.log INFO "Creating directory /mapr/$CLUSTERNAME/$DIR and updating permissions"
            sudo mkdir -p /mapr/$CLUSTERNAME/$DIR
        fi
        sudo chown -R zetaadm:2501 /mapr/$CLUSTERNAME/$DIR
        sudo chmod -R 750 /mapr/$CLUSTERNAME/$DIR
    done

    #####################################################
    # Create base Zeta Key Store locations
    # the kstore directory under zeta is used to house zeta specific configuration data, as well as zeta specific clusterwide information
    # Descriptions of the locations are below
    @go.log INFO "Setting up zeta kstore directory"
    DIR="/mapr/$CLUSTERNAME/zeta/kstore"
    sudo mkdir -p $DIR
    sudo chown zetaadm:2501 $DIR
    sudo chmod 755 $DIR

    # Group Sync
    DIR="/mapr/$CLUSTERNAME/zeta/kstore/zetasync"
    sudo mkdir -p $DIR
    sudo chown zetaadm:zetaadm $DIR
    sudo chmod 775 $DIR

    if [ ! -f "$DIR/zetagroups.list" ]; then
cat > ${DIR}/zetagroups.list << GRPEOF
GRPEOF
    else
        @go.log WARN "Not clobbering exiting zetagroups.list"
    fi
    if [ ! -f "$DIR/zetausers.list" ]; then
cat > ${DIR}/zetausers.list << USROF
USROF
    else
        @go.log WARN "Not clobbering exiting zetausers.list"
    fi

    if [ ! -f "$DIR/zetauid.list" ]; then
        touch ${DIR}/zetauid.list
    else
        @go.log WARN "Not clobbering exiting zetauid.list"
    fi

    # ENV Main
    DIR="/mapr/$CLUSTERNAME/zeta/kstore/env"
    sudo mkdir -p $DIR
    sudo chown zetaadm:zetaadm $DIR
    sudo chmod 775 $DIR

    if [ ! -f "$DIR/master_env.sh" ]; then
    @go.log INFO "Building Zeta Master ENV File"
cat > $DIR/master_env.sh << EOL3
#!/bin/bash

# START GLOBAL ENV Variables for Zeta Environment

export ZETA_CLUSTERNAME="${CLUSTERNAME}"
export ZETA_NFS_ROOT="/mapr/\$ZETA_CLUSTERNAME"

export ZETA_MESOS_DOMAIN="mesos"
export ZETA_MESOS_LEADER="leader.\${ZETA_MESOS_DOMAIN}"
export ZETA_MESOS_LEADER_PORT="5050"

# END GLOBAL ENV VARIABLES
EOL3
    else
        @go.log WARN "Not clobbering existing master_env.sh"
    fi


    #########
    # By creating a world reable directory in MapRFS for tickets, and then setting permission on each ticket to be only user readble, we have a one stop shop to store tickets
    # The only caveat is the mapr and zetaadm tickets need TLC, if especially the mapr ticket expires on a secure cluster, the result is NFS mount that don't work breaking all the things
    DIR="/mapr/$CLUSTERNAME/zeta/kstore/maprtickets"
    sudo mkdir -p $DIR
    sudo chown mapr:zetaadm $DIR
    sudo chmod 775 $DIR

    ##########
    # Installing global role directories
    # This is only available to zetaadm and is used for shared services like a cluster wide docker registry, and cluster wide ldap server
    #
    @go.log INFO "Looking for shared directory (volume) in each root direcory, create if not found"
    for DIR in $ROOTS; do
        if [ -d "/mapr/$CLUSTERNAME/$DIR/shared" ]; then
            @go.log WARN "/mapr/$CLUSTERNAME/$DIR/shared already exists, skipping"
        else
            @go.log INFO "Creating /mapr/$CLUSTERNAME/$DIR/shared"
            @go.maprapi "/volume/create?name=$DIR.shared&path=/$DIR/shared&rootdirperms=770&user=zetaadm:fc,a,dump,restore,m,d%20mapr:fc,a,dump,restore,m,d&ae=zetaadm"
            T=""
            while [ "$T" == "" ]; do
                sleep 1
                T=$(ls -1 /mapr/$CLUSTERNAME/$DIR|grep shared)
            done
            sudo chown -R zetaadm:zetaadm /mapr/$CLUSTERNAME/$DIR/shared
        fi
    done

    DIR="/mapr/$CLUSTERNAME/zeta/kstore/env/env_shared"
    sudo mkdir -p $DIR
    sudo chown zetaadm:zetaadm $DIR
    sudo chmod 775 $DIR
    ENV_FILE="/mapr/$CLUSTERNAME/zeta/kstore/env/zeta_shared.sh"

cat > $ENV_FILE << EOL9
# Source Master Zeta ENV File
. /mapr/\$(ls -1 /mapr)/zeta/kstore/env/master_env.sh
# START GLOBAL ENV Variables for Zeta Environment

export ZETA_MARATHON_ENV="marathon"
export ZETA_MARATHON_HOST="\${ZETA_MARATHON_ENV}.\${ZETA_MESOS_DOMAIN}"
export ZETA_MARATHON_PORT="8080"
export ZETA_MARATHON_URL="\$ZETA_MARATHON_HOST:\$ZETA_MARATHON_PORT"
export ZETA_MARATHON_SUBMIT="http://\$ZETA_MARATHON_URL/v2/apps"
export ZETA_CLDBS="$CLDBS"
export ZETA_IUSER="$IUSER"
export ZETA_ZKS="$ZKS"
export ZETA_DOCKER_PROXY="$DOCKER_PROXY"

# Source env_shared
for SRC in /mapr/\$ZETA_CLUSTERNAME/zeta/kstore/env/env_shared/*.sh; do
   . \$SRC
done

if [ "\$1" == "1" ]; then
    env|grep -P "^ZETA_"
fi

EOL9

    chmod +x $ENV_FILE
    #Create a dummy script in the env_prod directory so that file not found errors don't appear when sourcing main file
cat > /mapr/$CLUSTERNAME/zeta/kstore/env/env_shared/env_shared.sh << EOL5
#!/bin/bash
# Basic script to keep file not found errors from happening
EOL5

    @go.log INFO "Base Zeta Cluster layout installed"

cat > "$CLUSTER_BASE_CONF" << EO7
#!/bin/bash
# Base Layout installed
EO7

}

_zetabase "$@"
