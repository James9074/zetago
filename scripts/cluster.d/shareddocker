#!/bin/bash
#
# Install Shared Docker
#


sourceconf "$PREP_CONF"
sourceconf "$DCOS_CONF"
sourceconf "$NETWORK_CONF"
sourceconf "$FS_CONF"
sourceconf "$FS_PROVIDER_CONF"
sourceconf "$CLUSTER_CONF"
sourceconf "$CLUSTER_ZETACA_CONF"
sourceconf "$CLUSTER_BASE_CONF"

FS_LIB="lib${FS_PROVIDER}"
. "$_GO_USE_MODULES" $FS_LIB

function _shareddocker() {

    CURUSER=$(whoami)

    if [ "$CURUSER" != "${IUSER}" ]; then
        @go.log FATAL "Must use ${IUSER} user"
    fi

    DOCKER_IMAGE_LOC="$CLUSTERMOUNT/zeta/shared/dockerregv2/images"

    if [ -d "$DOCKER_IMAGE_LOC" ]; then
        @go.log FATAL "$DOCKER_IMAGE_LOC already exists. Please remove volume and/or delete the directory prior to installing Shared Docker Registry"
    else
        mkdir -p $CLUSTERMOUNT/zeta/shared/dockerregv2
        fs_mkvol "RETCODE" "$DOCKER_IMAGE_LOC" "zeta.shared.dockerregv2" "775"
        sudo chown ${IUSER}:${IUSER} $DOCKER_IMAGE_LOC
    fi

    sudo docker pull registry:2
    sudo docker tag registry:2 zeta/registry:2

    echo "We use the FS Bootstrap Docker Registry to host the Shared Docker Registry"

    sudo docker tag registry:2 ${FS_DOCKER_REG_URL}/dockerregv2
    sudo docker push ${FS_DOCKER_REG_URL}/dockerregv2



    PORTSTR="CLUSTER:tcp:5005:shared:dockerregv2:Zeta Shared Docker Registry"
    getport "CHKADD" "Port for Shared Zeta Docker Registry" "$SERVICES_CONF" "$PORTSTR"

    if [ "$CHKADD" != "" ]; then
        getpstr "TYPE" "PROTOCOL" "NEW_DOCKER_REG_PORT" "MYROLE" "MYAPP_ID" "COMMENTS" "$CHKADD"
        APP_PORTSTR="$CHKADD"
    else
        @go.log FATAL "Adding Porting to services failed $PSTR"
    fi

    NEW_DOCKER_REG_HOST="dockerregv2-shared.marathon.slave.mesos"
    ZETA_DOCKER_REG_URL="${NEW_DOCKER_REG_HOST}:${NEW_DOCKER_REG_PORT}"

cat > $CLUSTERMOUNT/zeta/kstore/env/env_shared/dockerregv2.sh << EOL

export ZETA_DOCKER_REG_HOST="$NEW_DOCKER_REG_HOST"
export ZETA_DOCKER_REG_PORT="$NEW_DOCKER_REG_PORT"
export ZETA_DOCKER_REG_URL="\${ZETA_DOCKER_REG_HOST}:\${ZETA_DOCKER_REG_PORT}"

EOL


    sudo chmod +x $CLUSTERMOUNT/zeta/kstore/env/env_shared/dockerregv2.sh

    APP_NAME="docker"
    APP_CERT_LOC="$CLUSTERMOUNT/zeta/shared/dockerregv2/certs"
    sudo mkdir -p ${APP_CERT_LOC}
    sudo chown ${IUSER}:root ${APP_CERT_LOC}
    sudo chmod 770 ${APP_CERT_LOC}
    CN_GUESS="dockerregv2-shared.marathon.slave.mesos"

    . /home/${IUSER}/zetaca/zetaca_env.sh
    . /home/${IUSER}/zetaca/gen_server_cert.sh

    MARFILE="$CLUSTERMOUNT/zeta/shared/dockerregv2/dockerregv2.shared.marathon"

cat > $MARFILE << EOF
{
  "id": "shared/dockerregv2",
  "cpus": 1,
  "mem": 1024,
  "instances": 1,
  "labels": {
   "CONTAINERIZER":"Docker"
  },
  "env": {
    "REGISTRY_HTTP_TLS_CERTIFICATE": "/certs/srv_cert.pem",
    "REGISTRY_HTTP_TLS_KEY": "/certs/key-no-password.pem"
  },
  "ports": [],
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "${FS_DOCKER_REG_URL}/dockerregv2",
      "network": "BRIDGE",
      "portMappings": [
        { "containerPort": 5000, "hostPort": ${NEW_DOCKER_REG_PORT}, "servicePort": 0, "protocol": "tcp"}
      ]
    },
    "volumes": [
      { "containerPath": "/var/lib/registry", "hostPath": "${DOCKER_IMAGE_LOC}", "mode": "RW" },
      { "containerPath": "/certs", "hostPath": "${APP_CERT_LOC}", "mode": "RO" }
    ]
  }
}
EOF
    ./zeta cluster marathon submit "${MARFILE}" "${MARATHON_SUBMIT}" 1

    @go.log INFO "Shared Docker Registry installed"

}

_shareddocker "$@"

