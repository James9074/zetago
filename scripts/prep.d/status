#!/bin/bash
#
# Determines prep status of a given node or all nodes via -a
#
# Arguments:
# -n="%NODE% Get status of a specific node
# No -n is like the old "-a" (all) it does it for all hosts
#

sourceconf "$PREP_CONF"

function _prep_status() {

    ALL="1"

    for i in "$@"
        do
        case $i in
            "-n="*)
            HOST="${i#*=}"
            ;;
            *)
            # unknown option
            ;;
        esac
    done
    if [ "$HOST" != "" ]; then
        ALL="0"
    fi

    if [ "$ALL" == "1" ]; then
        MYHOSTS="$NODES"
    else
        MYHOSTS="$HOST"
    fi

    if [ "$MYHOSTS" == "" ]; then
        @go.log FATAL "Must provide a host to connect and update status on via -n= or specify -a for all nodes"
    fi

    SCRIPTS="./bin/ubuntu_prep.sh ./bin/centos_prep1.sh ./bin/centos_prep2.sh"

    FOUND="1"
    for SCRIPT in $SCRIPTS; do
        if [ ! -f "$SCRIPT" ]; then
            FOUND="0"
        fi
    done
    if [ "$FOUND" == "0" ]; then
        @go.log INFO "System Scripts not found, creating in ./bin"
        ./zeta prep createsystemprep -u
    fi


    PREP_SCRIPT="./bin/prepstatus.sh"
    REM_LOC="/home/$IUSER/prepstatus.sh"
#printf "%-30s %-30s %-30s\n" "$PKG" "$PKGBASE" "$INST"

    if [ ! -f "$PREP_SCRIPT" ]; then
cat > $PREP_SCRIPT << EOF
#!/bin/bash
HNAME=\$(hostname)
KERNEL=\$(uname -a|cut -d" " -f3)
UP="true"
SUDO_CHK=\$(sudo whoami)
SYS_TYPE=\$(/home/${IUSER}/system_type.sh)
DCK_VERS=\$(sudo docker info 2> /dev/null|grep "Server Version")
EXT_IP=\$(curl -s icanhazip.com)

printf "%-30s %-30s %-30s %-30s %-30s %-30s %-30s\n" "\$EXT_IP" "\$HNAME" "\$UP" "\$SUDO_CHK" "\$KERNEL" "\$SYS_TYPE" "\$DCK_VERS"

EOF
    chmod +x $PREP_SCRIPT
    fi



    printf "%-30s %-30s %-30s %-30s %-30s %-30s %-30s\n" "Ext IP" "Hostname" "Host Up" "Sudo Check" "Kernel" "System Type" "Docker Version"
    echo "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
    for HOST in $MYHOSTS; do

        scp -q -i ${OUT_KEY} ./bin/system_type.sh ${IUSER}@${HOST}:/home/${IUSER}/system_type.sh
        scp -q -i ${OUT_KEY} $PREP_SCRIPT ${IUSER}@${HOST}:$REM_LOC
        if [ "$?" == "0" ]; then
            ssh -i ${OUT_KEY} ${IUSER}@${HOST} $REM_LOC
        else
            printf "%-30s %-30s %-30s %-30s %-30s %-30s %-30s\n" "$HOST" "false" "-" "-" "-" "-" "-"
        fi
    done
    echo ""
    echo ""
    echo "To log into the initial node, please use:"
    echo ""
    echo "ssh -i $OUT_KEY ${IUSER}@$INIT_NODE"
    echo ""

}

_prep_status "$@"
